/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.maven.app.view;
import com.mycompany.maven.app.service.BookedRoomService;
import com.mycompany.maven.app.service.RoomService;
import java.util.List;
import java.sql.*;
import com.mycompany.maven.app.util.ComboItem;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import com.mycompany.maven.app.Koneksi;
import com.mycompany.maven.app.model.BookedRoom;
import com.mycompany.maven.app.model.Patient;
import com.mycompany.maven.app.model.Room;
import com.mycompany.maven.app.service.PatientServiceImpl;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import com.mycompany.maven.app.util.NumberRenderer;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author mac
 */
public class KamarPanel extends javax.swing.JPanel {

    /**
     * Creates new form KamarPanel
     */
    
    private String editId = "";
    private Connection conn = new Koneksi().connect();
    private DefaultTableModel tabmode;
    public Date tgl_masuk,tgl_keluar;
    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
    private RoomService manageRoom;
    private PatientServiceImpl patientService;
    private BookedRoomService manageBookedRoom;
    
    public KamarPanel() {
        initComponents();
        this.manageRoom = new RoomService();
        this.patientService = new PatientServiceImpl();
        this.manageBookedRoom = new BookedRoomService();
        getRooms();
        getPatients();
//        dataTable();
        getTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cIdKamar = new javax.swing.JComboBox<>();
        cIdPasien = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dTglKeluar = new com.toedter.calendar.JDateChooser();
        tBiaya = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelKamar = new javax.swing.JTable();
        bSave = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        bClear = new javax.swing.JButton();
        bPrint = new javax.swing.JButton();
        dTglMasuk = new com.toedter.calendar.JDateChooser();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Data Penggunaan Kamar");

        jLabel4.setText("Kamar");

        jLabel5.setText("Pasien");

        jLabel6.setText("Tanggal Masuk");

        jLabel7.setText("Tanggal Keluar");

        jLabel8.setText("Biaya");

        dTglKeluar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dTglKeluarPropertyChange(evt);
            }
        });

        jLabel9.setText("Rp.");

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        tabelKamar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "room_id", "patient_id", "Kamar", "Pasien", "Tanggal Masuk", "Tanggal Keluar", "Biaya", "dibuat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelKamar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelKamarMouseClicked(evt);
            }
        });
        tabelKamar.getColumnModel().getColumn(7).setCellRenderer(NumberRenderer.getCurrencyRenderer());
        tabelKamar.removeColumn(tabelKamar.getColumnModel().getColumn(0));
        tabelKamar.removeColumn(tabelKamar.getColumnModel().getColumn(0));
        tabelKamar.removeColumn(tabelKamar.getColumnModel().getColumn(0));
        jScrollPane1.setViewportView(tabelKamar);

        bSave.setText("Save");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bDelete.setText("Delete");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        bClear.setText("Clear");
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        bPrint.setText("Print");
        bPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrintActionPerformed(evt);
            }
        });

        dTglMasuk.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dTglMasukPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(bSave)
                                .addComponent(jLabel7))
                            .addComponent(jLabel4))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tBiaya)
                                    .addComponent(cIdPasien, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(dTglKeluar, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                            .addComponent(cIdKamar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(dTglMasuk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bPrint)
                                .addGap(18, 18, 18)
                                .addComponent(bDelete)
                                .addGap(18, 18, 18)
                                .addComponent(bClear))))
                    .addComponent(jLabel8))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cIdKamar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cIdPasien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bSave)
                                    .addComponent(bDelete)
                                    .addComponent(bClear)
                                    .addComponent(bPrint))
                                .addGap(47, 47, 47)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dTglKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dTglMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public void getRooms() {
        cIdKamar.removeAllItems();
        List<Room> rooms = manageRoom.getAllRooms();
        for (Iterator<Room> iterator = rooms.iterator(); iterator.hasNext();) {
            Room next = iterator.next();
            cIdKamar.addItem(new ComboItem(next.getName(), next.getId()));
        }
    }
    
    public void getPatients() {
        cIdPasien.removeAllItems();
        List<Patient> patients = patientService.findAll();
        for (Iterator<Patient> iterator = patients.iterator(); iterator.hasNext();) {
            Patient next = iterator.next();
            cIdPasien.addItem(new ComboItem(next.getName(), next.getId()));
        }
    }
    
    protected void aktif() {
        cIdKamar.setEnabled(true);
        cIdPasien.setEnabled(true);
        dTglMasuk.setEnabled(true);
        dTglKeluar.setEnabled(true);
        tBiaya.setEnabled(true);
        cIdKamar.requestFocus();
    }
    
    protected void kosong() {
        this.editId = "";
        cIdKamar.setSelectedIndex(0);
        cIdPasien.setSelectedIndex(0);
        dTglMasuk.setDate(null);
        dTglKeluar.setDate(null);
        tBiaya.setText("");
    }
    
    private void getTable() {
        DefaultTableModel tm = (DefaultTableModel) tabelKamar.getModel();
        tm.setRowCount(0);
        List<BookedRoom> bookedRooms = manageBookedRoom.getAllBookedRooms();
        for (Iterator<BookedRoom> iterator = bookedRooms.iterator(); iterator.hasNext();) {
            BookedRoom next = iterator.next();
            Object[] row = {
                next.getId(),
                next.getRoomId(),
                next.getPatientId(),
                next.getRoom().getName(),
                next.getPatient().getName(),
                next.getFrom(),
                next.getUntil(),
                next.getCost(),
                next.getCreatedAt()
            };
            tm.addRow(row);
        }
    }
    
    private void refreshTable() {
        DefaultTableModel tm = (DefaultTableModel) tabelKamar.getModel();
        getTable();
        tm.fireTableDataChanged();
        tabelKamar.repaint();
    }
    
    protected void dataTable() {
        DefaultTableModel tk = (DefaultTableModel) tabelKamar.getModel();
        tk.setRowCount(0); 
        String sql = "select * from booked_rooms";
        try {
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()) {

                Object o[] = {
                    hasil.getString("id"),
                    hasil.getString("room_id"),
                    hasil.getString("patient_id"),
                    hasil.getString("from"),
                    hasil.getString("until"),
                    hasil.getString("cost"),
                };
                tk.addRow(o);
            }
        } catch (Exception e) {
            
        }
    }
    private void dTglKeluarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dTglKeluarPropertyChange
        // TODO add your handling code here:
        if (dTglKeluar.getDate() != null) {
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
//            tgl_keluar = format.format(dTglKeluar.getDate());
        }
    }//GEN-LAST:event_dTglKeluarPropertyChange

    private void tabelKamarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelKamarMouseClicked
        // TODO add your handling code here:
        int row = tabelKamar.getSelectedRow();
        String id = (String) tabelKamar.getModel().getValueAt(row, 0);
        String roomId = (String) tabelKamar.getModel().getValueAt(row, 1);
        String patientId = (String) tabelKamar.getModel().getValueAt(row, 2);
        String roomName = (String) tabelKamar.getModel().getValueAt(row, 3);
        String patientName = (String) tabelKamar.getModel().getValueAt(row, 4);
        Date from = (Date) tabelKamar.getModel().getValueAt(row, 5);
        Date until = (Date) tabelKamar.getModel().getValueAt(row, 6);
        double cost = (double) tabelKamar.getModel().getValueAt(row, 7);
        
        this.editId = id;
        cIdKamar.getModel().setSelectedItem(new ComboItem(roomName, roomId));
        cIdPasien.getModel().setSelectedItem(new ComboItem(patientName, patientId));
        dTglMasuk.setDate(from);
        dTglKeluar.setDate(until);
        tBiaya.setText(String.format("%.2f", cost));
    }//GEN-LAST:event_tabelKamarMouseClicked
    
    private static java.sql.Date convertUtilToSql(java.util.Date uDate) {
        java.sql.Date sDate = new java.sql.Date(uDate.getTime());
        return sDate;
    }
    
    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        // TODO add your handling code here:
        BookedRoom br = new BookedRoom();
        Object roomItem = cIdKamar.getSelectedItem();
        String roomId = ((ComboItem) roomItem).getValue();
        br.setRoomId(roomId);
        
        Object patientItem = cIdPasien.getSelectedItem();
        String patientId = ((ComboItem) patientItem).getValue();
        br.setPatientId(patientId);
        
        br.setFrom(dTglMasuk.getDate());
        br.setUntil(dTglKeluar.getDate());
        br.setCost(Double.parseDouble(tBiaya.getText()));
        if (editId.isEmpty()) {
            manageBookedRoom.insert(br);
        } else {
            br.setId(editId);
            manageBookedRoom.update(br);
        }
        kosong();
        refreshTable();
        JOptionPane.showMessageDialog(this, "Berhasil disimpan!");
    }//GEN-LAST:event_bSaveActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // TODO add your handling code here:
        int ok = JOptionPane.showConfirmDialog(null, "hapus","Konfirmasi Dialog", JOptionPane.YES_NO_OPTION);
        if (ok == 0) {
            manageBookedRoom.delete(editId);
            kosong();
            refreshTable();
            JOptionPane.showMessageDialog(null, "data berhasil dihapus");
        }
    }//GEN-LAST:event_bDeleteActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        // TODO add your handling code here:
        kosong();
        refreshTable();
    }//GEN-LAST:event_bClearActionPerformed

    private void bPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrintActionPerformed
        // TODO add your handling code here:       
        String filename = System.getProperty("user.dir") + File.separator + 
                "src" + File.separator + "main" + File.separator + "java" +
                File.separator + "com" + File.separator + "mycompany" + File.separator +
                "maven" + File.separator + "app" + File.separator + "report" + File.separator +
                "report-booked-rooms.jrxml";
        Map<String, Object> kode = new HashMap<String, Object>();
        File report = new File(filename);
        try {
            Koneksi conn = new Koneksi();
            JasperDesign jasDes = JRXmlLoader.load(report);
            JasperReport jasRep = JasperCompileManager.compileReport(jasDes);
            JasperPrint jasPri = JasperFillManager.fillReport(jasRep, kode, conn.connect());
            JasperViewer.viewReport(jasPri, false);

        } catch (Exception e) {
            System.out.println("err: " + e.getMessage());
        }
    }//GEN-LAST:event_bPrintActionPerformed

    private void dTglMasukPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dTglMasukPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_dTglMasukPropertyChange

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bClear;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bPrint;
    private javax.swing.JButton bSave;
    private javax.swing.JComboBox<ComboItem> cIdKamar;
    private javax.swing.JComboBox<ComboItem> cIdPasien;
    private com.toedter.calendar.JDateChooser dTglKeluar;
    private com.toedter.calendar.JDateChooser dTglMasuk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tBiaya;
    private javax.swing.JTable tabelKamar;
    // End of variables declaration//GEN-END:variables
}
